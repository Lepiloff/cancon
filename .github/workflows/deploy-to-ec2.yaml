name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # Получаем полную историю коммитов, а не только последний
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Проверка изменений в Dockerfile или requirements.txt
      - name: Check if Dockerfile or requirements.txt changed
        id: check_changes
        run: |
          echo "Checking if Dockerfile or requirements.txt have been changed..."
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"
          if [[ "$CHANGED_FILES" == *"Dockerfile"* || "$CHANGED_FILES" == *"requirements.txt"* ]]; then
            echo "::set-output name=rebuild::true"
            echo "Changes detected in Dockerfile or requirements.txt."
          else
            echo "::set-output name=rebuild::false"
            echo "No changes in Dockerfile or requirements.txt."
          fi
        shell: bash

      # Отображение результата проверки
      - name: Read if rebuild is needed
        run: |
          echo "Rebuild needed: ${{ steps.check_changes.outputs.rebuild }}"
        shell: bash

      # Деплой на EC2 с обработкой ошибок и откатом
      - name: Deploy to EC2
        run: |
          echo "Connecting to EC2 server..."
          set -e  # Прерывание выполнения при любой ошибке
          trap 'echo "Deployment failed, rolling back..."; ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP_ADDRESS }} "cd /home/ubuntu/cancon && docker-compose down && git reset --hard && docker-compose up -d"' ERR
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP_ADDRESS }} << 'EOF'
            cd /home/ubuntu/cancon
            echo "Navigated to project directory."
            docker-compose down
            git pull origin master
            if [ "${{ steps.check_changes.outputs.rebuild }}" == "true" ]; then
              echo "Rebuilding Docker containers."
              docker-compose build --no-cache
            else
              echo "No rebuild needed, restarting containers."
            fi
            docker-compose up -d
            echo "Containers started."
          EOF
